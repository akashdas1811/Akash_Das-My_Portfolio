{"version":3,"sources":["components/sideNav/SideNav.js","components/about/About.js","components/Education/Education.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/projects/Projects.js","components/ExperienceCard/ExperienceCard.js","components/Experience/Experience.js","components/Achievements/Achievements.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","components/constants/About.js","components/constants/Education.js","components/constants/Skills.js","components/constants/Project.js","components/constants/Experience.js","components/constants/Achievements.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","onClick","About","bio","Education","edu","SkillCard","skill","Skills","skills","industryKnowledge","map","techSkills","CommunicationSkills","ProjectCard","project","name","title","description","Projects","projects","projectList","ExperienceCard","experience","Experiences","experiences","Achievement","ach","SectionContainer","selectedHeading","selectedQuote","selectedSection","about","education","achievement","Portfolio","heading","quote","App","section","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2846f23c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './SideNav.css';\r\n\r\nexport const SideNav = ({ handleSectionClick }) => {\r\n    return (\r\n        <div className=\"sidenav\">\r\n            <img\r\n                src=\"https://avatars2.githubusercontent.com/u/50514652?s=400&u=a5fd09e47c64e3eff065e501ae88ca1ee3f0158f&v=4\"\r\n                className=\"avatar\"\r\n                alt=\"avatar\"\r\n            />\r\n            <h2 className=\"main-name\">Akash Das</h2>\r\n            <p className=\"subtitle\">\"A competitive programmer\"</p>\r\n            <div className=\"sections-list\">\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>About Me</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"education\")}>Education</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>Skills</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Projects</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"experiences\")}>Experiences</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"achievement\")}>Achievements</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport './about.css';\r\n\r\nexport const About = ({ bio }) => {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <p>{bio}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './education.css';\r\n\r\nexport const Education = ({ edu }) => {\r\n    return (\r\n        <div className=\"edu-container\">\r\n            <p>{edu}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './skill-card.css';\r\n\r\nexport const SkillCard = ({ skill }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            {skill}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { SkillCard } from './../SkillCard/SkillCard';\r\n\r\nimport './skills.css';\r\n\r\nexport const Skills = ({ skills }) => {\r\n    return (\r\n        <div className=\"skills-container\">\r\n            <h3>Industry Knowledge</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.industryKnowledge.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Tech Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Communication Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.CommunicationSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>    \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './project-card.css';\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Name:</b> {project.name}</p>\r\n            <p><b>Title:</b> {project.title}</p>\r\n            <p><b>Description:</b>{project.description}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\r\n\r\nimport './projects.css';\r\n\r\nexport const Projects = ({ projects }) => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    projects.projectList.map(project => <ProjectCard project={project} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './experience-card.css';\r\n\r\nexport const ExperienceCard = ({ experience }) => {\r\n    return (\r\n        <div className=\"experience-card\">\r\n            <p><b>Organization_Name:</b> {experience.name}</p>\r\n            <p><b>Description:</b>{experience.description}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ExperienceCard } from './../ExperienceCard/ExperienceCard';\r\n\r\nimport './experience.css';\r\n\r\nexport const Experiences = ({ experiences }) => {\r\n    return (\r\n        <div className=\"experiences-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    experiences.projectList.map(experience => <ExperienceCard experience={experience} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './achievements.css';\r\n\r\nexport const Achievement = ({ ach }) => {\r\n    return (\r\n        <div className=\"ach-container\">\r\n            <p>{ach}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { About } from './../about/About';\r\nimport { Education } from './../Education/Education';\r\nimport { Skills } from './../Skills/Skills';\r\nimport { Projects } from './../projects/Projects';\r\nimport { Experiences } from './../Experience/Experience';\r\nimport { Achievement } from './../Achievements/Achievements';\r\n\r\nimport './section-container.css';\r\n\r\nexport const SectionContainer = ({ \r\n    selectedHeading, \r\n    selectedQuote,\r\n    selectedSection,\r\n    about,\r\n    education,\r\n    skills,\r\n    projects,\r\n    experiences,\r\n    achievement }) => {\r\n    return (\r\n        <div className=\"section-container\">\r\n            <div className=\"section-heading-container\">\r\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\r\n                <p className=\"main-quote\">{selectedQuote}</p>\r\n            </div>\r\n            <div className=\"section-component\">\r\n                {\r\n                    {\r\n                        about: <About bio={about.bio} />,\r\n                        education: <Education edu={education.edu} />,\r\n                        skills: <Skills skills={skills} />,\r\n                        projects: <Projects projects={projects} />,\r\n                        experiences: <Experiences experiences={experiences} />,\r\n                        achievement: <Achievement ach={achievement.ach} />\r\n                    }[selectedSection]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { SideNav } from './../sideNav/SideNav.js';\r\nimport { SectionContainer } from './../SectionContainer/SectionContainer';\r\n\r\nimport './portfolio.css';\r\n\r\nexport const Portfolio = ({ \r\n    handleSectionClick,\r\n    selectedHeading, \r\n    selectedQuote,\r\n    selectedSection,\r\n    about,\r\n    education,\r\n    skills,\r\n    projects,\r\n    experiences,\r\n    achievement }) => {\r\n    return (\r\n        <div className=\"portfolio-container\">\r\n            <div className=\"sidenav-container\">\r\n                <SideNav\r\n                    handleSectionClick={handleSectionClick}\r\n                />\r\n            </div>\r\n            <div className=\"main-section-container\">\r\n                <SectionContainer\r\n                    selectedSection={selectedSection}\r\n                                        selectedHeading={selectedHeading}\r\n                                        selectedQuote={selectedQuote}\r\n                                        about={about}\r\n                                        education={education}\r\n                                        skills={skills}\r\n                                        projects={projects}\r\n                                        experiences={experiences}\r\n                                        achievement={achievement}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","export const about = {\r\n    heading: \"About Me\",\r\n    \"quote\": \"If you want a great achievement, don't waste time, \\nfor time is what life is made up of\",\r\n    \"bio\": \"A dedicated person,competitive programmer,front-end react developer,tech enthusiast.\\nAkash Das,pursuing B.Tech in Computer Science and Engineering(2021),looking for a sde role.\\nDo practice lots from various platform(codechef,hackerrank,hackerearth,leetcode,gfg)\\n\\nGithub: https://github.com/akashdas1811\\n\\nLinkedin: https://www.linkedin.com/in/akash-das-667972178/\\n\\nCodechef(4*):1873(https://www.codechef.com/users/akashdas1811)\\n\\nHackerrank(@akashdas1811)\\n\\nHackerearth(@akashdas1811)\\n\\nLeetcode(https://leetcode.com/akashdas1811/).\"\r\n};","export const education = {\r\n    heading: \"Education\",\r\n    \"quote\": \"If you want a great achievement, don't waste time, \\nfor time is what life is made up of\",\r\n    \"edu\": \"University/College:  Maulana Abul kalam Azad University Of Technology,WB \\n\\nDegree: B.tech(Computer Science and Technology)(2017-2021)\\n\\nGrade: 7.67 CGPA(5th sem)\\n\\nDegree: WBCHSE(10+2)(2016-17)\\n\\nSchool/Organization: Krishnath College School,WB\\n\\nGrade: 79.2 %\\n\\nDegree: WBBSE(10)(2014-15)\\n\\nSchool/Organization: Krishnath College School,WB\\n\\nGrade: 85.6%\"\r\n};","export const skills = {\r\n    heading: \"Skills\",\r\n    quote: \"Build your skills, not your resume\",\r\n    techSkills: [\r\n        \"C++\",\r\n        \"C\",\r\n        \"Python\",\r\n        \"Data Structures\",\r\n        \"Algorithms\",\r\n        \"JavaScript\",\r\n        \"NodeJS\",\r\n        \"ReactJS\",\r\n        \"HTML\",\r\n        \"CSS\",\r\n        \"MySql\",\r\n        \"DBMS\",\r\n        \"Sql\",\r\n        \"Git\",\r\n        \"GitHub\",\r\n    ],\r\n    industryKnowledge: [\r\n        \"OpenCv\",\r\n        \"Python\",\r\n        \"Image Processing\",\r\n        \"Technical Content Writing\",\r\n    ],\r\n    CommunicationSkills: [\r\n      \"English\",\r\n      \"Hindi\",\r\n      \"Bengali\",\r\n    ]\r\n};","export const projects = {\r\n    heading: \"Projects\",\r\n    quote: \"After learning something new, always try to implement it\",\r\n    projectList: [\r\n        {\r\n            name: \"Project 1\",\r\n            title: \"Grain detection of a steel plate using opencv\",\r\n            description: \"Processing and refinement of stell microstructure images for assisting\\nincomputerized heat treatment of plain carbon steel.\"\r\n        }, \r\n        {\r\n            name: \"Project 2\",\r\n            title: \"Todo List App using React.js\",\r\n            description: \"You can Organize your tasks by lists and if you want you can delete the completed task and add a new task.\"\r\n        }, \r\n        {\r\n            name: \"Project 3\",\r\n            title: \"Snake-Food Game using Javascript,Html,Css\",\r\n            description: \"After having the food the length of snake(array) increases and when it touches the borders , the game will be stopped.\"\r\n        }, \r\n        {\r\n            name: \"Project 4\",\r\n            title: \"My_portfolio using React.js and Css\",\r\n            description: \"Details of Akash Das(education,skills,projects etc).\"\r\n        }, \r\n    ]\r\n}","export const experiences = {\r\n    heading: \"Experiences\",\r\n    quote: \"Experiences can help you to do something easily.\",\r\n    projectList: [\r\n        {\r\n            name: \"Cppsecrets.com\",\r\n            description: \"Technical content writing and python developer\"\r\n        }, \r\n        {\r\n            name: \"Coding Blocks\",\r\n            description: \"Competitive Programming Course.\"\r\n        }, \r\n        {\r\n            name: \"Coursera\",\r\n            description: \"Python Basic.\"\r\n        }, \r\n        {\r\n            name: \"Udemy\",\r\n            description: \"The Complete Sql Course.\"\r\n        }, \r\n    ]\r\n}","export const achievement = {\r\n    heading: \"Achievements\",\r\n    \"quote\": \"If you want a great achievement, don't waste time, \\nfor time is what life is made up of\",\r\n    \"ach\": \"1) Codechef Snackdown round A qualifier.\\n\\n2) Cleared the assessment for problem solving(HackerRank).\\n\\n3) Qualified for Round 1 in Facebook Hackercup 2020.\\n\\n4) Coding Ninja Winters of code-2020.\\n\\n5) Secured rank 1901 in campus- codestack’19 contest.\\n\\n6) Certified of Scalar academy hiring challenge.\"\r\n};","import React, { Component } from 'react';\n\nimport { Portfolio } from './Portfolio/Portfolio';\n\nimport { about } from './constants/About';\nimport { education } from './constants/Education';\nimport { skills } from './constants/Skills';\nimport { projects } from './constants/Project';\nimport { experiences } from './constants/Experience';\nimport { achievement } from './constants/Achievements';\nimport './App.css';\n\nclass App extends Component {\n  constructor () {\n    super();\n\n    this.state = {\n      selectedSection: \"\",\n      selectedHeading: \"\",\n      selectedQuote: \"\",\n      about: null,\n      education: null,\n      skills: null,\n      projects: null,\n      experiences: null,\n      achievement: null,\n    };\n  }\n\n  componentWillMount () {\n    this.setState ({ \n      about,\n      education,\n      skills,\n      projects,\n      experiences,\n      achievement,\n      selectedHeading: about.heading,\n      selectedQuote: about.quote,\n      selectedSection: \"about\" \n    });\n  }\n\n  handleSectionClick =  (section) => {\n    this.setState({\n      selectedSection: section,\n      selectedHeading: this.state[section].heading,\n      selectedQuote: this.state[section].quote\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Portfolio\n          handleSectionClick={this.handleSectionClick}\n          selectedSection={this.state.selectedSection}\n          selectedHeading={this.state.selectedHeading}\n          selectedQuote={this.state.selectedQuote}\n          about={this.state.about}\n          education={this.state.education}\n          skills={this.state.skills}\n          projects={this.state.projects}\n          experiences={this.state.experiences}\n          achievement={this.state.achievement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}